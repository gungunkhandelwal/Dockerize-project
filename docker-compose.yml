services:
  db:
    image: postgres:14
    container_name: railsathi_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rail_sathi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: railsathi_web
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database Configuration
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      
      #Email Configuration
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_STARTTLS=${MAIL_STARTTLS}
      - MAIL_SSL_TLS=${MAIL_SSL_TLS}
      - USE_CREDENTIALS=${USE_CREDENTIALS}
      - VALIDATE_CERTS=${VALIDATE_CERTS}
      
      # Google Cloud Storage
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - PROJECT_ID=${PROJECT_ID}
      
      # App Configuration
      - app_host=0.0.0.0
      - app_port=8000
      - log_level=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./templates:/app/templates
      - .:/app
      - ./media:/app/media
    command: ["./wait-for-it.sh", "db", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data:
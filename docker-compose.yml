version: '3.8'

services:
  db:
    image: postgres:14
    container_name: railsathi_db
    environment:
      POSTGRES_DB: rail_sathi_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rail_sathi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: railsathi_web
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database Configuration
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=rail_sathi_db
      
      #Email Configuration
      - MAIL_USERNAME=test@example.com
      - MAIL_PASSWORD=testpassword
      - MAIL_FROM=test@example.com
      - MAIL_PORT=587
      - MAIL_SERVER=smtp.gmail.com
      - MAIL_STARTTLS=True
      - MAIL_SSL_TLS=False
      - USE_CREDENTIALS=True
      - VALIDATE_CERTS=True
      
      # Google Cloud Storage
      - GCS_BUCKET_NAME=test-bucket
      - PROJECT_ID=test-project
      
      # App Configuration
      - app_host=0.0.0.0
      - app_port=8000
      - log_level=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./templates:/app/templates
      - .:/app
      - ./media:/app/media
    command: ["./wait-for-it.sh", "db", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data: